from simpful import *
import matplotlib.pyplot as plt
import numpy as np

# Utw√≥rz system rozmyty
FS = FuzzySystem()

# Zdefiniuj zmienne lingwistyczne z jawnym uniwersum dyskursu
# Jako≈õƒá jedzenia (0-10)
food_var = LinguisticVariable([
    FuzzySet(function=Trapezoidal_MF(a=0, b=0, c=2, d=4), term="poor"),
    FuzzySet(function=Triangular_MF(a=3, b=5, c=7), term="average"),
    FuzzySet(function=Trapezoidal_MF(a=6, b=8, c=10, d=10), term="good")
], universe_of_discourse=[0, 10])
FS.add_linguistic_variable("food", food_var)

# Jako≈õƒá obs≈Çugi (0-10)
service_var = LinguisticVariable([
    FuzzySet(function=Trapezoidal_MF(a=0, b=0, c=2, d=4), term="poor"),
    FuzzySet(function=Triangular_MF(a=3, b=5, c=7), term="average"),
    FuzzySet(function=Trapezoidal_MF(a=6, b=8, c=10, d=10), term="good")
], universe_of_discourse=[0, 10])
FS.add_linguistic_variable("service", service_var)

# Wysoko≈õƒá napiwku (0-30%)
tip_var = LinguisticVariable([
    FuzzySet(function=Trapezoidal_MF(a=0, b=0, c=5, d=10), term="low"),
    FuzzySet(function=Triangular_MF(a=10, b=15, c=20), term="medium"),
    FuzzySet(function=Trapezoidal_MF(a=20, b=25, c=30, d=30), term="high")
], universe_of_discourse=[0, 30])
FS.add_linguistic_variable("tip", tip_var)

# Dodaj regu≈Çy (przyk≈Çad z 9 regu≈Çami zamiast 3 dla kompletno≈õci)
FS.add_rules([
    "IF (food IS poor) AND (service IS poor) THEN (tip IS low)",
    "IF (food IS average) AND (service IS poor) THEN (tip IS low)",
    "IF (food IS good) AND (service IS poor) THEN (tip IS medium)",
    "IF (food IS poor) AND (service IS average) THEN (tip IS low)",
    "IF (food IS average) AND (service IS average) THEN (tip IS medium)",
    "IF (food IS good) AND (service IS average) THEN (tip IS medium)",
    "IF (food IS poor) AND (service IS good) THEN (tip IS medium)",
    "IF (food IS average) AND (service IS good) THEN (tip IS high)",
    "IF (food IS good) AND (service IS good) THEN (tip IS high)"
])

print("üîß System rozmyty skonfigurowany z nastƒôpujƒÖcymi regu≈Çami:")
for i, rule in enumerate(FS._rules, 1):
    print(f"   {i}. {rule}")

# c) Funkcja do wy≈õwietlania wykres√≥w zmiennych lingwistycznych
def plot_membership_functions(fuzzy_sets, title, x_max=10):
    """
    Rysuje funkcje przynale≈ºno≈õci dla zmiennej lingwistycznej
    """
    x = np.linspace(0, x_max, 1000)
    
    plt.figure(figsize=(10, 6))
    
    colors = ['red', 'orange', 'green']
    for i, fuzzy_set in enumerate(fuzzy_sets):
        y = []
        for xi in x:
            try:
                membership_value = fuzzy_set.get_value(xi)
                y.append(membership_value)
            except:
                y.append(0)
        
        plt.plot(x, y, label=fuzzy_set._term, linewidth=3, color=colors[i % len(colors)])
        plt.fill_between(x, y, alpha=0.2, color=colors[i % len(colors)])
    
    plt.title(f"Funkcje przynale≈ºno≈õci - {title}", fontsize=14, fontweight='bold')
    plt.xlabel("Warto≈õƒá", fontsize=12)
    plt.ylabel("Stopie≈Ñ przynale≈ºno≈õci", fontsize=12)
    plt.legend(fontsize=12)
    plt.grid(True, alpha=0.3)
    plt.ylim(0, 1.1)
    plt.tight_layout()
    plt.show()

# Wy≈õwietl wykresy funkcji przynale≈ºno≈õci
print("\nüìä c) Wykresy zmiennych lingwistycznych:")

# Stw√≥rz zbiory dla wizualizacji
food_sets = [
    FuzzySet(function=Trapezoidal_MF(a=0, b=0, c=2, d=4), term="poor"),
    FuzzySet(function=Triangular_MF(a=3, b=5, c=7), term="average"),
    FuzzySet(function=Trapezoidal_MF(a=6, b=8, c=10, d=10), term="good")
]

service_sets = [
    FuzzySet(function=Trapezoidal_MF(a=0, b=0, c=2, d=4), term="poor"),
    FuzzySet(function=Triangular_MF(a=3, b=5, c=7), term="average"),
    FuzzySet(function=Trapezoidal_MF(a=6, b=8, c=10, d=10), term="good")
]

tip_sets = [
    FuzzySet(function=Trapezoidal_MF(a=0, b=0, c=5, d=10), term="low"),
    FuzzySet(function=Triangular_MF(a=10, b=15, c=20), term="medium"),
    FuzzySet(function=Trapezoidal_MF(a=20, b=25, c=30, d=30), term="high")
]

plot_membership_functions(food_sets, "Jako≈õƒá jedzenia", 10)
plot_membership_functions(service_sets, "Jako≈õƒá obs≈Çugi", 10)
plot_membership_functions(tip_sets, "Wysoko≈õƒá napiwku", 30)

# d) Testowanie kontrolera
def test_controller():
    """
    d) Przetestuj dzia≈Çanie kontrolera - kilka przyk≈Çad√≥w
    """
    print("\n" + "="*60)
    print("üìã d) TESTOWANIE KONTROLERA NAPIWK√ìW")
    print("="*60)
    print(f"{'Jedzenie':<12} {'Obs≈Çuga':<12} {'Napiwek':<15} {'Opis'}")
    print("-" * 60)
    
    # Przyk≈Çadowe dane wej≈õciowe
    test_cases = [
        (2.0, 3.0, "S≈Çabe jedzenie, s≈Çaba obs≈Çuga"),
        (5.0, 5.0, "≈örednie jedzenie, ≈õrednia obs≈Çuga"),
        (8.0, 8.0, "Dobre jedzenie, dobra obs≈Çuga"),
        (9.0, 2.0, "Bardzo dobre jedzenie, s≈Çaba obs≈Çuga"),
        (3.0, 9.0, "S≈Çabe jedzenie, bardzo dobra obs≈Çuga"),
        (1.0, 1.0, "Bardzo s≈Çabe wszystko"),
        (10.0, 10.0, "Perfekcyjne wszystko")
    ]
    
    for food, service, description in test_cases:
        # Ustaw warto≈õci wej≈õciowe
        FS.set_variable("food", food)
        FS.set_variable("service", service)
        
        # Wykonaj wnioskowanie
        tip_result = FS.inference()
        tip_value = tip_result["tip"]
        
        # Wy≈õwietl wynik
        print(f"{food:<12.1f} {service:<12.1f} {tip_value:<7.1f}%      {description}")

# Uruchom testy
test_controller()

print("\n" + "="*60)
print("‚úÖ SYSTEM NAPIWK√ìW - PODSUMOWANIE")
print("="*60)
print("üìä System zawiera:")
print("   ‚Ä¢ 3 zmienne lingwistyczne (jedzenie, obs≈Çuga, napiwek)")
print("   ‚Ä¢ 9 regu≈Ç logiki rozmytej")
print("   ‚Ä¢ Funkcje przynale≈ºno≈õci: trapezoidalne i tr√≥jkƒÖtne")
print("\nüéØ System logicznie oblicza napiwki na podstawie jako≈õci!")





# ============================================================
# üìã d) TESTOWANIE KONTROLERA NAPIWK√ìW
# ============================================================
# Jedzenie     Obs≈Çuga      Napiwek         Opis
# ------------------------------------------------------------
# 2.0          3.0          4.4    %      S≈Çabe jedzenie, s≈Çaba obs≈Çuga
# 5.0          5.0          15.0   %      ≈örednie jedzenie, ≈õrednia obs≈Çuga
# 8.0          8.0          26.1   %      Dobre jedzenie, dobra obs≈Çuga
# 9.0          2.0          15.0   %      Bardzo dobre jedzenie, s≈Çaba obs≈Çuga
# 3.0          9.0          15.0   %      S≈Çabe jedzenie, bardzo dobra obs≈Çuga
# 1.0          1.0          3.9    %      Bardzo s≈Çabe wszystko
# 10.0         10.0         26.1   %      Perfekcyjne wszystko

# ============================================================
# ‚úÖ SYSTEM NAPIWK√ìW - PODSUMOWANIE
# ============================================================
# üìä System zawiera:
#    ‚Ä¢ 3 zmienne lingwistyczne (jedzenie, obs≈Çuga, napiwek)
#    ‚Ä¢ 9 regu≈Ç logiki rozmytej
#    ‚Ä¢ Funkcje przynale≈ºno≈õci: trapezoidalne i tr√≥jkƒÖtne